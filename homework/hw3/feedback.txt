Git commit: 1359aca927057635cfc618c3200affe03fe1fc30

Missing hw3/substcode

valgrind errors:

==16500== Memcheck, a memory error detector
==16500== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16500== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==16500== Command: ./substcode key.txt assignment.input
==16500== Parent PID: 15552
==16500== 
==16500== Conditional jump or move depends on uninitialised value(s)
==16500==    at 0x4C30F78: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==16500==    by 0x40094E: main (in /home/sramirez266/c_grading/marshabl12/homework/hw3/substcode)
==16500== 
==16500== Conditional jump or move depends on uninitialised value(s)
==16500==    at 0x4C30A0A: __GI_strchr (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==16500==    by 0x400A58: main (in /home/sramirez266/c_grading/marshabl12/homework/hw3/substcode)
==16500== 
==16500== Conditional jump or move depends on uninitialised value(s)
==16500==    at 0x4C30A10: __GI_strchr (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==16500==    by 0x400A58: main (in /home/sramirez266/c_grading/marshabl12/homework/hw3/substcode)
==16500== 
==16500== Conditional jump or move depends on uninitialised value(s)
==16500==    at 0x4C30A25: __GI_strchr (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==16500==    by 0x400A58: main (in /home/sramirez266/c_grading/marshabl12/homework/hw3/substcode)
==16500== 
==16500== Conditional jump or move depends on uninitialised value(s)
==16500==    at 0x4C30A1A: __GI_strchr (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==16500==    by 0x400A58: main (in /home/sramirez266/c_grading/marshabl12/homework/hw3/substcode)
==16500== 
==16500== Conditional jump or move depends on uninitialised value(s)
==16500==    at 0x4C30F78: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==16500==    by 0x400B19: main (in /home/sramirez266/c_grading/marshabl12/homework/hw3/substcode)
==16500== 
==16500== 
==16500== HEAP SUMMARY:
==16500==     in use at exit: 1,656 bytes in 3 blocks
==16500==   total heap usage: 7 allocs, 4 frees, 67,192 bytes allocated
==16500== 
==16500== LEAK SUMMARY:
==16500==    definitely lost: 0 bytes in 0 blocks
==16500==    indirectly lost: 0 bytes in 0 blocks
==16500==      possibly lost: 0 bytes in 0 blocks
==16500==    still reachable: 1,656 bytes in 3 blocks
==16500==         suppressed: 0 bytes in 0 blocks
==16500== Rerun with --leak-check=full to see details of leaked memory
==16500== 
==16500== For counts of detected and suppressed errors, rerun with: -v
==16500== Use --track-origins=yes to see where uninitialised values come from
==16500== ERROR SUMMARY: 145 errors from 6 contexts (suppressed: 0 from 0)

The key_used during encryption is correct, along with the encrypted output and the decrypted output. However your key_used outputted for a decryption task is actually the same as the key_used for encryption, which it should not be.

Missing error checks for fopen
Overall good job!
